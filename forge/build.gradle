buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = "https://repo.spongepowered.org/maven"}
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath("org.spongepowered:mixingradle:0.7-SNAPSHOT")
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.1'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: "org.spongepowered.mixin"

version = project.ext.fullVersion
group = 'me.lucko.luckperms'
archivesBaseName = 'luckperms'

//java.toolchain.languageVersion = JavaLanguageVersion.of(8)

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    annotationProcessor("org.spongepowered:mixin:0.8.2:processor")
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.25'
    compile project(':common')
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    archiveName = "LuckPerms-Forge-${project.ext.fullVersion}-dev.jar"
    manifest {
        attributes([
            "Specification-Title": "luckperms",
            "Specification-Vendor": "luckperms",
            "Specification-Version": "${project.ext.fullVersion}",
            "Implementation-Title": "luckperms",
            "Implementation-Version": "${project.ext.fullVersion}",
            "Implementation-Vendor" :"luckperms",
            "TweakClass":"org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": 0,
            "MixinConfigs":"luckperms.mixins.json",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


processResources {
    inputs.property 'version', project.ext.fullVersion

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': project.ext.fullVersion
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

shadowJar {
    archiveName = "LuckPerms-Forge-${project.ext.fullVersion}-dev.jar"

    dependencies {
        exclude('net.minecraft.forge:.*')
        include(dependency('net.luckperms:.*'))
        include(dependency('me.lucko.luckperms:.*'))
        // We don't want to include the mappings in the jar do we?
        exclude '/mappings/*'
    }

    relocate 'net.kyori.adventure', 'me.lucko.luckperms.lib.adventure'
    relocate 'net.kyori.event', 'me.lucko.luckperms.lib.eventbus'
    relocate 'com.github.benmanes.caffeine', 'me.lucko.luckperms.lib.caffeine'
    relocate 'okio', 'me.lucko.luckperms.lib.okio'
    relocate 'okhttp3', 'me.lucko.luckperms.lib.okhttp3'
    relocate 'net.bytebuddy', 'me.lucko.luckperms.lib.bytebuddy'
    relocate 'me.lucko.commodore', 'me.lucko.luckperms.lib.commodore'
    relocate 'org.mariadb.jdbc', 'me.lucko.luckperms.lib.mariadb'
    relocate 'com.mysql', 'me.lucko.luckperms.lib.mysql'
    relocate 'org.postgresql', 'me.lucko.luckperms.lib.postgresql'
    relocate 'com.zaxxer.hikari', 'me.lucko.luckperms.lib.hikari'
    relocate 'com.mongodb', 'me.lucko.luckperms.lib.mongodb'
    relocate 'org.bson', 'me.lucko.luckperms.lib.bson'
    relocate 'redis.clients.jedis', 'me.lucko.luckperms.lib.jedis'
    relocate 'com.rabbitmq', 'me.lucko.luckperms.lib.rabbitmq'
    relocate 'org.apache.commons.pool2', 'me.lucko.luckperms.lib.commonspool2'
    relocate 'ninja.leaping.configurate', 'me.lucko.luckperms.lib.configurate'
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args("--mixin.config", "luckperms.mixins.json")
            workingDirectory(project.file("run"))
            singleInstance(true)

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args("--mixin.config", "luckperms.mixins.json")
            workingDirectory(project.file("run"))
            singleInstance(true)

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'luckperms', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}


mixin {
    add(sourceSets.main, "luckperms.refmap.json")
}

reobf {
    shadowJar { }
}

tasks.build.dependsOn reobfShadowJar
jar.finalizedBy('reobfShadowJar')
